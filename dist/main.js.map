{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///./src/main.ts","webpack:///external \"path\"","webpack:///external \"url\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","mainWin","Permissions","createWindow","BrowserWindow","width","height","show","frame","minWidth","minHeight","webPreferences","nodeIntegration","icon","loadURL","url","format","pathname","path","join","app","getAppPath","protocol","slashes","once","on","process","platform","quit"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBClFrDhC,EAAOD,QAAUkC,QAAQ,a,oFCAzB,aACA,OACA,OAMA,IAAIC,EAEJ,IAAKC,GAAL,SAAKA,GACD,gBACA,sBAFJ,CAAKA,MAAW,KAqDhB,IAAIC,EAAe,MACfF,EAAU,IAAI,EAAAG,cAAc,CACxBC,MAAO,KACPC,OAAQ,IACRC,MAAM,EACNC,OAAO,EACPC,SAAU,IACVC,UAAW,IACXC,eAAgB,CACZC,iBAAiB,GAErBC,KAAM,2BAGFC,QAAQC,EAAIC,OAAO,CACvBC,SAAUC,EAAKC,KAAK,EAAAC,IAAIC,aAAc,cACtCC,SAAU,QACVC,SAAS,KAGNtB,GAOX,EAAAmB,IAAII,KAAK,QAAS,MACdvB,EAAUE,KACFqB,KAAK,gBAAiB,KAC1BvB,EAAQM,WAqChB,EAAAa,IAAIK,GAAG,oBAAqB,KACC,WAArBC,QAAQC,UACR,EAAAP,IAAIQ,SAKZ,EAAAR,IAAIK,GAAG,WAAY,KACC,OAAZxB,IACAA,EAAUE,Q,cC3IlBpC,EAAOD,QAAUkC,QAAQ,S,cCAzBjC,EAAOD,QAAUkC,QAAQ","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = require(\"electron\");","import { app, BrowserWindow, ipcMain, Menu } from \"electron\";\r\nimport * as path from \"path\";\r\nimport * as url from \"url\";\r\nimport * as fs from \"fs\";\r\nimport { userInfo } from \"os\";\r\n\r\n// let loadWin: BrowserWindow;\r\n// let loginWin: BrowserWindow;\r\nlet mainWin: BrowserWindow;\r\n\r\nenum Permissions {\r\n    Admin = \"Admin\",\r\n    Readonly = \"Readonly\"\r\n}\r\ninterface UserConfig {\r\n    firstName?: string,\r\n    lastName?: string,\r\n    email: string,\r\n    accessPermissions: Permissions\r\n}\r\n/*\r\nlet createLoadAppWindow = () => {\r\n    loadWin = new BrowserWindow({\r\n        width: 320,\r\n        height: 160,\r\n        show: false,\r\n        frame: false,\r\n        // icon: 'src/assets/psLogo.ico'\r\n    });\r\n\r\n    loadWin.loadURL(url.format({\r\n        pathname: path.join(app.getAppPath(), 'load.html'),\r\n        protocol: 'file:',\r\n        slashes: true\r\n    }));\r\n\r\n    return loadWin;\r\n}\r\n*/\r\n/*\r\nlet createLoginWindow = () => {\r\n    loginWin = new BrowserWindow({\r\n        width: 800, // 50rem\r\n        height: 480, // 30rem\r\n        show: false,\r\n        frame: false,\r\n        resizable: false,\r\n        webPreferences: {\r\n            nodeIntegration: true\r\n        },\r\n        icon: 'src/assets/psLogo.ico'\r\n    });\r\n\r\n    loginWin.loadURL(url.format({\r\n        pathname: path.join(app.getAppPath(), 'login.html'),\r\n        protocol: 'file',\r\n        slashes: true\r\n    }));\r\n\r\n    return loginWin;\r\n}\r\n\r\n*/\r\nlet createWindow = () => {\r\n    mainWin = new BrowserWindow({\r\n        width: 1200,\r\n        height: 800,\r\n        show: false,\r\n        frame: false,\r\n        minWidth: 900,\r\n        minHeight: 600,\r\n        webPreferences: {\r\n            nodeIntegration: true\r\n        },\r\n        icon: 'src/assets/psLogo.ico'\r\n    });\r\n\r\n    mainWin.loadURL(url.format({\r\n        pathname: path.join(app.getAppPath(), 'index.html'),\r\n        protocol: 'file:',\r\n        slashes: true\r\n    }));\r\n\r\n    return mainWin;\r\n}\r\n\r\n\r\n// let configFile = app.getAppPath() + \"\\\\silk.config.json\";\r\n\r\n// INIT\r\napp.once('ready', () => {\r\n    mainWin = createWindow();\r\n    mainWin.once(\"ready-to-show\", () => {\r\n        mainWin.show();\r\n    });\r\n    /*\r\n    loadWin = createLoadAppWindow();\r\n    loadWin.once('ready-to-show', () => {\r\n        loadWin.show();\r\n    });\r\n    fs.access(configFile, err => {\r\n        if (!err) {\r\n            let filebuffer = fs.readFileSync(configFile, \"utf8\");\r\n            let userPref = JSON.parse(filebuffer);\r\n            \r\n            mainWin = createWindow();\r\n            mainWin.once('ready-to-show', () => {\r\n                setTimeout(() => {\r\n                    loadWin.close();\r\n                    mainWin.show();\r\n                }, 3000);\r\n            });\r\n            \r\n            mainWin.once(\"show\", () => {\r\n                mainWin.webContents.send(\"init:UserPref\", userPref.email, userPref.accessPermissions);\r\n            })\r\n        } else {\r\n            loginWin = createLoginWindow();\r\n            loginWin.once('ready-to-show', () => {\r\n                setTimeout(() => {\r\n                    loadWin.close();\r\n                    loginWin.show();\r\n                }, 3000);\r\n            });\r\n        }\r\n    });\r\n    */\r\n});\r\n\r\n// macOS\r\napp.on('window-all-closed', () => {\r\n    if (process.platform !== 'darwin') {\r\n        app.quit();\r\n    }\r\n});\r\n\r\n// macOS\r\napp.on('activate', () => {\r\n    if (mainWin === null) {\r\n        mainWin = createWindow();\r\n    }\r\n});\r\n\r\n/*\r\n// on MainWin\r\nipcMain.on(\"json:submit\", (event: any, data: any) => {\r\n    let raw = fs.readFileSync(data, \"utf8\");\r\n    let user = JSON.parse(raw);\r\n\r\n    mainWin.webContents.send(\"json:receive\", user.firstName, user.lastName);\r\n});\r\n*/\r\n\r\n/* user pref prompted from main\r\nipcMain.on(\"reset:UserPref\", (e: any, d: any) => {\r\n    loginWin = createLoginWindow();\r\n    loginWin.once('ready-to-show', () => {\r\n        mainWin.close();\r\n        loginWin.show();\r\n    });\r\n});\r\n*/\r\n\r\n/*\r\n// on LoginWin\r\nipcMain.on(\"register:Email\", (e: any, d: any) => {\r\n    let userPref: any;\r\n    fs.access(configFile, err => {\r\n        if (!err) { // if config file already exists\r\n            let filebuffer = fs.readFileSync(configFile, \"utf8\"); // open config file\r\n            userPref = JSON.parse(filebuffer); // parse config file contents to object\r\n            userPref.email = d; // set new data to replace previous data\r\n            fs.writeFileSync(configFile, JSON.stringify(userPref), \"utf8\"); // write to config file\r\n            mainWin = createWindow();\r\n        } else {\r\n            userPref = {} as UserConfig;\r\n            userPref.email = d;\r\n            userPref.accessPermissions = Permissions.Admin;\r\n            fs.writeFileSync(configFile, JSON.stringify(userPref), \"utf8\"); // write to config file\r\n            mainWin = createWindow();\r\n        }\r\n    });\r\n\r\n    mainWin.once('ready-to-show', () => {\r\n        loginWin.close();\r\n        mainWin.show();\r\n    });\r\n\r\n    mainWin.once(\"show\", () => {\r\n        mainWin.webContents.send(\"init:UserPref\", userPref.email, userPref.accessPermissions);\r\n    });\r\n});\r\n*/","module.exports = require(\"path\");","module.exports = require(\"url\");"],"sourceRoot":""}